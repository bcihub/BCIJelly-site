"use strict";(self.webpackChunkhcihub_docs=self.webpackChunkhcihub_docs||[]).push([[917],{5571:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"datasets/non-invasive/Calcium Imaging","title":"7_Calcium Imaging","description":"\u6570\u636e\u96c6\u94fe\u63a5","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/datasets/non-invasive/7_Calcium Imaging.md","sourceDirName":"datasets/non-invasive","slug":"/datasets/non-invasive/Calcium Imaging","permalink":"/BCIJelly-site/zh/docs/next/datasets/non-invasive/Calcium Imaging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasets/non-invasive/7_Calcium Imaging.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"6_Things EEG","permalink":"/BCIJelly-site/zh/docs/next/datasets/non-invasive/Things EEG"},"next":{"title":"CCA","permalink":"/BCIJelly-site/zh/docs/next/models/CCA"}}');var t=s(4848),i=s(8453);const l={},d="7_Calcium Imaging",r={},m=[{value:"\u6570\u636e\u96c6\u94fe\u63a5",id:"\u6570\u636e\u96c6\u94fe\u63a5",level:2},{value:"1.\u6570\u636e\u91c7\u96c6",id:"1\u6570\u636e\u91c7\u96c6",level:3},{value:"2.\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b",id:"2\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b",level:3}];function c(n){const e={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",msup:"msup",mtext:"mtext",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"7_calcium-imaging",children:"7_Calcium Imaging"})}),"\n",(0,t.jsx)(e.h2,{id:"\u6570\u636e\u96c6\u94fe\u63a5",children:"\u6570\u636e\u96c6\u94fe\u63a5"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://zenodo.org/doi/10.5281/zenodo.10408334",children:"https://zenodo.org/doi/10.5281/zenodo.10408334"})}),"\n",(0,t.jsx)(e.h3,{id:"1\u6570\u636e\u91c7\u96c6",children:"1.\u6570\u636e\u91c7\u96c6"}),"\n",(0,t.jsx)(e.p,{children:"\u5b9e\u9a8c\u65b9\u6cd5\uff1a\u91c7\u7528\u5bbd\u573a\u9499\u6210\u50cf\uff08wide-field calcium imaging\uff09\u8bb0\u5f55\u5c0f\u9f20\u5927\u8111\u76ae\u5c42\u7684\u8367\u5149\u4fe1\u53f7\uff0c\u540c\u65f6\u91c7\u96c6\u884c\u4e3a\u6d3b\u52a8\u6570\u636e\u3002\n\u88ab\u8bd5\uff1a5\u53ea\u5c0f\u9f20\u3002\n\u5b9e\u9a8c\u8303\u5f0f\uff1a\u540c\u6b65\u83b7\u53d6\u795e\u7ecf\u6d3b\u52a8\u4e0e\u884c\u4e3a\u8868\u73b0\uff0c\u7528\u4e8e\u5206\u6790\u76ae\u5c42\u52a8\u6001\u4e0e\u884c\u4e3a\u4e4b\u95f4\u7684\u5173\u7cfb\u3002"}),"\n",(0,t.jsx)(e.h3,{id:"2\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b",children:"2.\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u8bfb\u53d6\u5b9e\u9a8c\u914d\u7f6e\u4fe1\u606f"}),"\n",(0,t.jsxs)(e.p,{children:["\u4ece ",(0,t.jsx)(e.code,{children:"data_64_5mice.csv"})," \u4e2d\u8bfb\u53d6 ",(0,t.jsx)(e.code,{children:"Data_ID"})," \u4e0e\u5bf9\u5e94\u7684\u5c0f\u9f20\u7f16\u53f7\uff08",(0,t.jsx)(e.code,{children:"Mouse_#"}),"\uff09\u6620\u5c04\u5173\u7cfb\uff0c\u7528\u4e8e\u540e\u7eed\u547d\u540d\u8f93\u51fa\u6587\u4ef6\u3002\n\u4ece ",(0,t.jsx)(e.code,{children:"runrest_5mice.mat"})," \u4e2d\u8bfb\u53d6\u884c\u4e3a\u6807\u7b7e\uff08\u6bcf\u53ea\u5c0f\u9f20\u7684 run/rest \u6bb5\u843d\u4fe1\u606f\uff09\u3002\n\u6839\u636e\u5c0f\u9f20\u7f16\u53f7\u83b7\u53d6\u5bf9\u5e94\u7684 ",(0,t.jsx)(e.code,{children:".tif"})," \u6587\u4ef6\u540d\u5217\u8868\uff0c\u6bcf\u4e2a ",(0,t.jsx)(e.code,{children:"Data_ID"})," \u5bf9\u5e94\u4e00\u6b21\u6210\u50cf\u5b9e\u9a8c\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u56fe\u50cf\u52a0\u8f7d\u4e0e\u9884\u5904\u7406"}),"\n",(0,t.jsxs)(e.p,{children:["\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"tifffile"})," \u8bfb\u53d6 ",(0,t.jsx)(e.code,{children:".tif"})," \u5bbd\u573a\u9499\u6210\u50cf\u6570\u636e\uff0c\u5e76\u786e\u4fdd\u6570\u636e\u5f62\u72b6\u4e3a ",(0,t.jsx)(e.code,{children:"[T, C, H, W]"}),"\uff08\u65f6\u95f4\u5e27\u6570 T\u3001\u901a\u9053\u6570 C\u3001\u7a7a\u95f4\u5206\u8fa8\u7387 H\xd7W\uff09\u3002\n\u67e5\u627e\u4e0e\u56fe\u50cf\u5e27\u6570\u6700\u5339\u914d\u7684\u6807\u7b7e\u5e8f\u5217\uff08\u5141\u8bb8 \xb15 \u5e27\u8bef\u5dee\uff09\uff0c\u5bf9\u957f\u5ea6\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u8fdb\u884c\u622a\u65ad\u5904\u7406\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u5747\u503c / \u6807\u51c6\u5dee\u52a0\u8f7d"}),"\n",(0,t.jsxs)(e.p,{children:["\u4ece\u9884\u5148\u8ba1\u7b97\u597d\u7684 ",(0,t.jsx)(e.code,{children:"_mean.npy"})," \u4e0e ",(0,t.jsx)(e.code,{children:"_std.npy"})," \u6587\u4ef6\u4e2d\u8bfb\u53d6\u6bcf\u4e2a ",(0,t.jsx)(e.code,{children:"Data_ID"})," \u5bf9\u5e94\u7684\u9010\u50cf\u7d20\u5747\u503c\uff08mean\uff09\u548c\u6807\u51c6\u5dee\uff08std\uff09\u77e9\u9635\uff0c\u7528\u4e8e\u6807\u51c6\u5316\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u9010\u5e27\u6807\u51c6\u5316"}),"\n",(0,t.jsx)(e.p,{children:"\u5bf9\u6bcf\u4e00\u5e27\u5f71\u50cf\u505a per-pixel \u6807\u51c6\u5316\uff1a"}),"\n",(0,t.jsx)(e.span,{className:"katex-display",children:(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsxs)(e.msub,{children:[(0,t.jsx)(e.mrow,{}),(0,t.jsx)(e.mtext,{children:"norm"})]}),(0,t.jsx)(e.mo,{children:"="}),(0,t.jsxs)(e.mfrac,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"x"}),(0,t.jsx)(e.mo,{children:"\u2212"}),(0,t.jsx)(e.mtext,{children:"mean"})]}),(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mtext,{children:"std"}),(0,t.jsx)(e.mo,{children:"+"}),(0,t.jsx)(e.mn,{children:"1"}),(0,t.jsx)(e.mo,{children:"\xd7"}),(0,t.jsxs)(e.msup,{children:[(0,t.jsx)(e.mn,{children:"10"}),(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mo,{children:"\u2212"}),(0,t.jsx)(e.mn,{children:"5"})]})]})]})]})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"_{\\text{norm}} = \\frac{x - \\text{mean}}{\\text{std} + 1\\times 10^{-5}}"})]})})}),(0,t.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.5169em",verticalAlign:"-0.15em"}}),(0,t.jsxs)(e.span,{className:"mord",children:[(0,t.jsx)(e.span,{}),(0,t.jsx)(e.span,{className:"msupsub",children:(0,t.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(e.span,{className:"vlist-r",children:[(0,t.jsx)(e.span,{className:"vlist",style:{height:"0.1514em"},children:(0,t.jsxs)(e.span,{style:{top:"-2.55em",marginRight:"0.05em"},children:[(0,t.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(e.span,{className:"mord mtight",children:(0,t.jsx)(e.span,{className:"mord text mtight",children:(0,t.jsx)(e.span,{className:"mord mtight",children:"norm"})})})})]})}),(0,t.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(e.span,{className:"vlist-r",children:(0,t.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(e.span,{})})})]})})]}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(e.span,{className:"mrel",children:"="}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"2.0297em",verticalAlign:"-0.7693em"}}),(0,t.jsxs)(e.span,{className:"mord",children:[(0,t.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,t.jsx)(e.span,{className:"mfrac",children:(0,t.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(e.span,{className:"vlist-r",children:[(0,t.jsxs)(e.span,{className:"vlist",style:{height:"1.2603em"},children:[(0,t.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,t.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsxs)(e.span,{className:"mord",children:[(0,t.jsx)(e.span,{className:"mord text",children:(0,t.jsx)(e.span,{className:"mord",children:"std"})}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mbin",children:"+"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mord",children:"1"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mbin",children:"\xd7"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mord",children:"1"}),(0,t.jsxs)(e.span,{className:"mord",children:[(0,t.jsx)(e.span,{className:"mord",children:"0"}),(0,t.jsx)(e.span,{className:"msupsub",children:(0,t.jsx)(e.span,{className:"vlist-t",children:(0,t.jsx)(e.span,{className:"vlist-r",children:(0,t.jsx)(e.span,{className:"vlist",style:{height:"0.7401em"},children:(0,t.jsxs)(e.span,{style:{top:"-2.989em",marginRight:"0.05em"},children:[(0,t.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsxs)(e.span,{className:"mord mtight",children:[(0,t.jsx)(e.span,{className:"mord mtight",children:"\u2212"}),(0,t.jsx)(e.span,{className:"mord mtight",children:"5"})]})})]})})})})})]})]})]}),(0,t.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,t.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,t.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,t.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsxs)(e.span,{className:"mord",children:[(0,t.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mord text",children:(0,t.jsx)(e.span,{className:"mord",children:"mean"})})]})]})]}),(0,t.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(e.span,{className:"vlist-r",children:(0,t.jsx)(e.span,{className:"vlist",style:{height:"0.7693em"},children:(0,t.jsx)(e.span,{})})})]})}),(0,t.jsx)(e.span,{className:"mclose nulldelimiter"})]})]})]})]})}),"\n",(0,t.jsxs)(e.p,{children:["\u4fdd\u7559\u901a\u9053\u7ef4\u5ea6 ",(0,t.jsx)(e.code,{children:"[C, H, W]"}),"\uff0c\u82e5\u8bbe\u7f6e ",(0,t.jsx)(e.code,{children:"flatten=True"}),"\uff0c\u5219\u5c06\u6bcf\u5e27\u5c55\u5f00\u5e76\u53d6\u901a\u9053\u5747\u503c\uff0c\u5f97\u5230 ",(0,t.jsx)(e.code,{children:"[C]"})," \u7279\u5f81\u5411\u91cf\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u5e8f\u5217\u7a97\u53e3\u5316"}),"\n",(0,t.jsxs)(e.p,{children:["\u8bbe\u5b9a\u65f6\u95f4\u7a97\u53e3\u957f\u5ea6 ",(0,t.jsx)(e.code,{children:"T=30"}),"\uff0c\u5c06\u8fde\u7eed 30 \u5e27\u4f5c\u4e3a\u4e00\u4e2a\u6837\u672c\uff0c\u6ed1\u52a8\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u7a97\u53e3\u5e8f\u5217\u3002\n\u6bcf\u4e2a\u7a97\u53e3\u7684\u6807\u7b7e\u901a\u8fc7\u7a97\u53e3\u5185\u6807\u7b7e\u7684\u591a\u6570\u6295\u7968\uff08",(0,t.jsx)(e.code,{children:"np.bincount().argmax()"}),"\uff09\u786e\u5b9a\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u547d\u540d\u89c4\u5219\u4e0e\u4fdd\u5b58"}),"\n",(0,t.jsx)(e.p,{children:"\u8f93\u51fa\u6587\u4ef6\u547d\u540d\u683c\u5f0f\u4e3a\uff1a"}),"\n",(0,t.jsx)(e.p,{children:"YYYYMMDD_Mouse#.npz"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u6bcf\u4e2a .npz \u6587\u4ef6\u4e2d\uff1a"}),"\n",(0,t.jsx)(e.p,{children:"calcium \u2192 \u7a97\u53e3\u5316\u540e\u7684\u5f71\u50cf\u7279\u5f81"}),"\n",(0,t.jsx)(e.p,{children:"label \u2192 \u5bf9\u5e94\u7684\u7a97\u53e3\u6807\u7b7e"}),"\n",(0,t.jsx)(e.p,{children:"\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5c06\u5728\u6587\u4ef6\u540d\u540e\u81ea\u52a8\u6dfb\u52a0 _v2\u3001_v3 \u7b49\u540e\u7f00\u4ee5\u9632\u8986\u76d6\u3002\n\u6240\u6709 .npz \u6587\u4ef6\u4fdd\u5b58\u5728 datasets/10408334/data/npz_data/ \u76ee\u5f55\u4e0b\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import pandas as pd\nimport numpy as np\n\ndf = pd.read_csv('datasets/10408334/data_64_5mice.csv')\ndf\n"})}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{style:{textAlign:"right"}}),(0,t.jsx)(e.th,{children:"Data_ID"}),(0,t.jsx)(e.th,{children:"Mouse_#"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,t.jsx)(e.td,{children:"20180125_Emx1G6_LR_1"}),(0,t.jsx)(e.td,{children:"1"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,t.jsx)(e.td,{children:"20180125_Emx1G6_R_1"}),(0,t.jsx)(e.td,{children:"3"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,t.jsx)(e.td,{children:"20180125_Emx1G6_non_1"}),(0,t.jsx)(e.td,{children:"2"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,t.jsx)(e.td,{children:"20180126_Emx1G6_LR_1"}),(0,t.jsx)(e.td,{children:"1"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,t.jsx)(e.td,{children:"20180126_Emx1G6_R_1"}),(0,t.jsx)(e.td,{children:"3"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:".."}),(0,t.jsx)(e.td,{children:"..."}),(0,t.jsx)(e.td,{children:"..."})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"59"}),(0,t.jsx)(e.td,{children:"20180411_Emx1G6_non_1"}),(0,t.jsx)(e.td,{children:"5"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"60"}),(0,t.jsx)(e.td,{children:"20180412_Emx1G6_L_1"}),(0,t.jsx)(e.td,{children:"4"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"61"}),(0,t.jsx)(e.td,{children:"20180412_Emx1G6_non_1"}),(0,t.jsx)(e.td,{children:"5"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"62"}),(0,t.jsx)(e.td,{children:"20180413_Emx1G6_L_1"}),(0,t.jsx)(e.td,{children:"4"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"right"},children:"63"}),(0,t.jsx)(e.td,{children:"20180413_Emx1G6_non_1"}),(0,t.jsx)(e.td,{children:"5"})]})]})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def get_filename(mouse_No):\n    filename = np.empty(0)\n    for i in mouse_No:\n        files = df[df['Mouse_#'] == i]['Data_ID'].values\n        filename = np.hstack([filename, files])\n    return filename\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import tifffile\nimport gc\n\ndef load_image(filename):\n    X_tmp = tifffile.imread(filename)\n    m = X_tmp.mean(axis=0)\n    s = X_tmp.std()\n    del X_tmp\n    gc.collect();\n    return m, s\n\nimage_path = 'datasets/10408334/'\nsave_path = 'datasets/10408334/data/mean_and_std/'\n\ndef calc_mean_std(mouse_num):\n    for i in get_filename([mouse_num]):\n        print(i)\n        m, s = load_image(image_path + i + '.tif')\n        print('Standard Deviation: {:.2f}'.format(s))\n        np.save(save_path + i + '_mean', m)\n        np.save(save_path + i + '_std', s)\n\nfor i in range(1,6):\n    print('Mouse No.'+str(i))\n    calc_mean_std(i)\n"})}),"\n",(0,t.jsx)(e.p,{children:"Mouse No.1\n20180125_Emx1G6_LR_1\nStandard Deviation: 1087.01\n...\n20180213_Emx1G6_LR_1\nStandard Deviation: 975.20\nMouse No.2\n20180125_Emx1G6_non_1\nStandard Deviation: 1174.45\n...\n20180216_Emx1G6_non_1\nStandard Deviation: 1109.51\nMouse No.3\n20180125_Emx1G6_R_1\nStandard Deviation: 1146.73\n...\n20180216_Emx1G6_R_1\nStandard Deviation: 1093.76\nMouse No.4\n20180321_Emx1G6_L_1\nStandard Deviation: 1193.14\n...\n20180413_Emx1G6_L_1\nStandard Deviation: 1455.59\nMouse No.5\n20180321_Emx1G6_non_1\nStandard Deviation: 1166.09\n...\n20180413_Emx1G6_non_1\nStandard Deviation: 1471.06"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'import numpy as np\nimport tifffile\nimport os\nimport gc\nimport pandas as pd\nfrom scipy.io import loadmat\nfrom collections import defaultdict\nfrom glob import glob\n\n\nimage_path = \'datasets/10408334/\'\nbehavior_path = \'datasets/10408334/\'\n\n# \u8bfb\u53d6\u884c\u4e3a\u6807\u7b7e\nmat_data = loadmat(os.path.join(behavior_path, \'runrest_5mice.mat\'))\n\n# \u6309\u7f16\u53f7\u627e\u6587\u4ef6\u540d\ndef get_filename(mouse_No):\n    filename = np.empty(0)\n    for i in mouse_No:\n        files = df[df[\'Mouse_#\'] == i][\'Data_ID\'].values\n        filename = np.hstack([filename, files])\n    return filename\n\n# \u52a0\u8f7d\u56fe\u50cf\ndef load_image(path):\n    img = tifffile.imread(path) \n    if img.ndim == 3:\n        img = img[:, np.newaxis, :, :]\n    return img.astype(np.float32)\ndef get_framewise_labels(mat_entry):\n    """\n    mat_entry: runrestX \u7684\u5185\u5bb9\uff0cshape=(1, N), dtype=object\n    \u8fd4\u56de: \u62fc\u63a5\u540e\u7684\u5e27\u6807\u7b7e np.array, shape=[T]\n    """\n    segments = mat_entry[0]  # \u5f97\u5230\u957f\u5ea6\u4e3a N \u7684\u5217\u8868\n    label_seq = [seg.flatten() for seg in segments]  # \u6bcf\u4e2a seg \u662f (1, T_i)\n    return np.concatenate(label_seq)\ndef find_matching_segment(mat_entry, T_img, tolerance=1):\n    """\n    \u81ea\u52a8\u4ece runrestX[0] \u4e2d\u627e\u4e00\u4e2a\u4e0e\u56fe\u50cf\u5e27\u6570\u5339\u914d\u7684\u6807\u7b7e\u6bb5\uff08\u5141\u8bb8 \xb1tolerance\uff09\n    """\n    for seg in mat_entry[0]:\n        y = seg.flatten()\n        if abs(len(y) - T_img) <= 5:\n            if len(y) < T_img:\n                # \u5982\u679c\u6807\u7b7e\u7565\u77ed \u2192 padding\n                y = np.pad(y, (0, T_img - len(y)))\n            else:\n                # \u5982\u679c\u6807\u7b7e\u7565\u957f \u2192 \u622a\u65ad\n                y = y[:T_img]\n            return y\n    raise ValueError(f"\u627e\u4e0d\u5230\u4e0e\u56fe\u50cf\u5e27\u6570 {T_img} \u5339\u914d\u7684\u6807\u7b7e\u6bb5")\n\nmean_dict = {}\nstd_dict = {}\nsave_path = \'datasets/10408334/data/mean_and_std/\'\n\nfor i in df[\'Data_ID\']:\n    m = np.load(save_path + i + \'_mean.npy\')\n    s = np.load(save_path + i + \'_std.npy\')\n    mean_dict[i] = m\n    std_dict[i] = s\n\ndef _unique_path(path):\n    """\u82e5\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u5728\u6587\u4ef6\u540d\u540e\u6dfb\u52a0 _v2/_v3... \u9632\u6b62\u8986\u76d6\u3002"""\n    if not os.path.exists(path):\n        return path\n    base, ext = os.path.splitext(path)\n    k = 2\n    while True:\n        cand = f"{base}_v{k}{ext}"\n        if not os.path.exists(cand):\n            return cand\n        k += 1\n\ndef build_NTC_direct_and_save(mouse_nums, csv_path, root_npz_dir, T=30, flatten=True):\n    """\n    \u4ece\u539f\u59cb .tif + .mat \u76f4\u63a5\u751f\u6210\u7a97\u53e3\u5316\u7684 .npy\uff0c\n    \u5e76\u6309 \'YYYYMMDD_Mouse#_{x|y}.npy\' \u547d\u540d\u4fdd\u5b58\uff08\u4e00\u6b65\u5b8c\u6210\uff0c\u65e0\u9700\u540e\u7eed\u91cd\u547d\u540d\uff09\u3002\n    """\n    os.makedirs(root_npz_dir, exist_ok=True)\n\n    # \u8bfb\u53d6 Data_ID -> Mouse_# \u6620\u5c04\n    df = pd.read_csv(csv_path)\n    id_to_mouse = dict(zip(df[\'Data_ID\'], df[\'Mouse_#\']))\n\n    for mouse_num in mouse_nums:\n        for fname in get_filename([mouse_num]):   # \u4f8b\u5982 "20180125_Emx1G6_LR_1"\n            print(f"\u5904\u7406\uff1a{fname}.tif")\n\n            # 1) \u52a0\u8f7d\u5f71\u50cf\u4e0e\u6807\u7b7e\n            X = load_image(os.path.join(image_path, fname + \'.tif\'))  # [T, C, H, W]\n            T_img = len(X)\n            mat_entry = mat_data[f\'runrest{mouse_num}\']\n            Y = find_matching_segment(mat_entry, T_img)\n            assert len(X) == len(Y), f"{fname}: \u56fe\u50cf\u5e27\u6570 {len(X)} != \u6807\u7b7e\u6570 {len(Y)}"\n\n            # 2) \u53d6 per-pixel mean/std\uff08\u82e5\u4f60\u5df2\u6709 mean_dict/std_dict \u5c31\u7ee7\u7eed\u7528\uff09\n            mean = mean_dict[fname]  # [H, W]\n            std  = std_dict[fname]   # [H, W]\n\n            # 3) \u6807\u51c6\u5316 + \u5c55\u5e73\u5230\u6bcf\u5e27\u7684 [C]\n            X_list, Y_list = [], []\n            for j in range(len(Y)):\n                x = X[j][0]                       # [H, W]\n                y = int(Y[j])\n                x = (x - mean) / (std + 1e-5)\n                x = x[np.newaxis, :, :]          # [C, H, W]\n                if flatten:\n                    x = x.reshape(x.shape[0], -1).mean(axis=-1)  # [C]\n                X_list.append(x)\n                Y_list.append(y)\n\n            X_all = np.stack(X_list)              # [T_img, C] \u6216 [T_img, C, H, W]\n            Y_all = np.array(Y_list)              # [T_img]\n\n            del X_list, Y_list, X, Y\n            gc.collect()\n\n            # 4) \u4e0d\u8db3\u7a97\u53e3\u957f\u5ea6\u5219\u8df3\u8fc7\n            if len(X_all) < T:\n                print(f"\u8df3\u8fc7 {fname}, \u5e27\u6570 {len(X_all)} < T={T}")\n                continue\n\n            # 5) \u7a97\u53e3\u5316\n            N = len(X_all) - T + 1\n            X_windows = np.stack([X_all[i:i+T] for i in range(N)])                 # [N, T, ...]\n            Y_windows = np.array([np.bincount(Y_all[i:i+T]).argmax() for i in range(N)])  # [N]\n\n\n            # 6) \u4fdd\u5b58\u4e3a .npz\n            date_part = fname[:8]\n            mouse_no  = id_to_mouse.get(fname, f"M{mouse_num}")\n            base = f"{date_part}_{mouse_no}.npz"\n            save_path = _unique_path(os.path.join(root_npz_dir, base))\n\n            np.savez(save_path, calcium=X_windows, label=Y_windows)\n\n            print(f"\u4fdd\u5b58\uff1a{os.path.basename(save_path)} | calcium {X_windows.shape}, label {Y_windows.shape}")\n\n\n# \u8c03\u7528\nbuild_NTC_direct_and_save(\n    mouse_nums=range(1, 6),\n    csv_path=\'datasets/10408334/data_64_5mice.csv\',\n    root_npz_dir=\'datasets/10408334/data/npz_data\',\n    T=30,\n    flatten=True\n)\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u5904\u7406\uff1a20180125_Emx1G6_LR_1.tif\n\u4fdd\u5b58\uff1a20180125_1.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180126_Emx1G6_LR_1.tif\n\u4fdd\u5b58\uff1a20180126_1.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180129_Emx1G6_LR_1.tif\n\u4fdd\u5b58\uff1a20180129_1.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180130_Emx1G6_LR_1.tif\n\u4fdd\u5b58\uff1a20180130_1.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180131_Emx1G6_LR_1.tif\n...\n\u4fdd\u5b58\uff1a20180405_5.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180406_Emx1G6_non_1.tif\n\u4fdd\u5b58\uff1a20180406_5.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180409_Emx1G6_non_1.tif\n\u4fdd\u5b58\uff1a20180409_5.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180411_Emx1G6_non_1.tif\n\u4fdd\u5b58\uff1a20180411_5.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180412_Emx1G6_non_1.tif\n\u4fdd\u5b58\uff1a20180412_5.npz | calcium (17971, 30, 1), label (17971,)\n\u5904\u7406\uff1a20180413_Emx1G6_non_1.tif\n\u4fdd\u5b58\uff1a20180413_5.npz | calcium (17971, 30, 1), label (17971,)"})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>d});var a=s(6540);const t={},i=a.createContext(t);function l(n){const e=a.useContext(i);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);