"use strict";(self.webpackChunkhcihub_docs=self.webpackChunkhcihub_docs||[]).push([[9346],{8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>r});var s=n(6540);const t={},a=s.createContext(t);function l(e){const i=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(a.Provider,{value:i},e.children)}},8946:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"datasets/invasive/FALCON M1-A","title":"1_FALCON M1-A Dataset","description":"Dataset Link","source":"@site/docs/datasets/invasive/1_FALCON M1-A.md","sourceDirName":"datasets/invasive","slug":"/datasets/invasive/FALCON M1-A","permalink":"/BCIJelly-site/docs/next/datasets/invasive/FALCON M1-A","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasets/invasive/1_FALCON M1-A.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"2_FALCON M2","permalink":"/BCIJelly-site/docs/next/datasets/invasive/FALCON M2"}}');var t=n(4848),a=n(8453);const l={},r="1_FALCON M1-A Dataset",d={},o=[{value:"Dataset Link",id:"dataset-link",level:2},{value:"1. Experimental Design &amp; Data Collection",id:"1-experimental-design--data-collection",level:2},{value:"Subjects",id:"subjects",level:3},{value:"Task Paradigm",id:"task-paradigm",level:3},{value:"Recording Modalities",id:"recording-modalities",level:3},{value:"2. Dataset Structure",id:"2-dataset-structure",level:2},{value:"3. Data Fields",id:"3-data-fields",level:2},{value:"4. Processing Workflow (Recommended for Analysis)",id:"4-processing-workflow-recommended-for-analysis",level:2},{value:"5. Example Python Loader",id:"5-example-python-loader",level:2},{value:"6. Notes",id:"6-notes",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"1_falcon-m1-a-dataset",children:"1_FALCON M1-A Dataset"})}),"\n",(0,t.jsx)(i.h1,{id:"introduction--processing-workflow",children:"Introduction & Processing Workflow"}),"\n",(0,t.jsx)(i.h2,{id:"dataset-link",children:"Dataset Link"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://snel-repo.github.io/falcon/",children:"https://snel-repo.github.io/falcon/"}),"\nDOI: 10.48324/dandi.000941/0.241029.1405\nDANDI ID: 000941 / Version: 0.241029.1405\nLicense: CC-BY-4.0\nAccess: Open Access"]}),"\n",(0,t.jsx)(i.h2,{id:"1-experimental-design--data-collection",children:"1. Experimental Design & Data Collection"}),"\n",(0,t.jsx)(i.h3,{id:"subjects",children:"Subjects"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Species: Macaca mulatta (Rhesus monkey)"}),"\n",(0,t.jsxs)(i.li,{children:["Number of subjects: 3 (each dataset split counted as one \u201csubject\u201d in DANDI; actual recordings from one monkey for M1-A, additional monkey data ",(0,t.jsx)(i.a,{href:"https://dandiarchive.org/dandiset/001209",children:"here"}),")"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"task-paradigm",children:"Task Paradigm"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Type: Reach-to-grasp, center-out reaching task."}),"\n",(0,t.jsxs)(i.li,{children:["Conditions:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"4 different objects"}),"\n",(0,t.jsx)(i.li,{children:"8 possible target positions"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Behavioral events recorded:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"gocue_time"}),"\n",(0,t.jsx)(i.li,{children:"move_onset_time"}),"\n",(0,t.jsx)(i.li,{children:"contact_time"}),"\n",(0,t.jsx)(i.li,{children:"reward_time"}),"\n",(0,t.jsx)(i.li,{children:"result, number, tgt_loc, tgt_obj, obj_id, condition_id"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"recording-modalities",children:"Recording Modalities"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Neural signals: Multiunit spiking activity from electrode arrays implanted in primary motor cortex (M1)."}),"\n",(0,t.jsx)(i.li,{children:"EMG: Intramuscular EMG (iEMG) from 16 upper-limb muscles."}),"\n",(0,t.jsx)(i.li,{children:"Data format: Neurodata Without Borders (NWB)."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"2-dataset-structure",children:"2. Dataset Structure"}),"\n",(0,t.jsx)(i.p,{children:"Three data splits provided for the FALCON Challenge:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"held-in-calib: Many trials; intended for decoder calibration."}),"\n",(0,t.jsx)(i.li,{children:"held-in-minival: Small subset of held-in-calib; for validating model submission format."}),"\n",(0,t.jsx)(i.li,{children:"held-out-calib: Separate sessions with fewer trials; for few-shot recalibration."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"3-data-fields",children:"3. Data Fields"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"preprocessed_emg: iEMG signals from 16 muscles."}),"\n",(0,t.jsx)(i.li,{children:"eval_mask: Boolean mask marking within-trial periods for benchmark evaluation."}),"\n",(0,t.jsx)(i.li,{children:"units: Spike times per recorded unit."}),"\n",(0,t.jsx)(i.li,{children:"trials: Trial-level metadata including timings, object/location IDs, and outcome."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"4-processing-workflow-recommended-for-analysis",children:"4. Processing Workflow (Recommended for Analysis)"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Data Loading: Use pynwb or dandi Python client to read .nwb files."}),"\n",(0,t.jsx)(i.li,{children:"Signal Preprocessing: Align spike times, bin."}),"\n",(0,t.jsx)(i.li,{children:"Feature Extraction: Spike (mean firing rate, peri-event histograms)."}),"\n",(0,t.jsx)(i.li,{children:"Label Generation: Map trials to discrete conditions; define time windows relative to events."}),"\n",(0,t.jsx)(i.li,{children:"Model Input Formatting: Spike matrices [trials, time_bins, units]"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"5-example-python-loader",children:"5. Example Python Loader"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"from dandi.dandiapi import DandiAPIClient\nimport pynwb\n\ndef load_falcon_dataset(nwb_path):\n    io = pynwb.NWBHDF5IO(nwb_path, 'r')\n    nwbfile = io.read()\n    spikes = {unit: nwbfile.units['spike_times'][i]\n              for i, unit in enumerate(nwbfile.units['id'][:])}\n    trials = nwbfile.trials.to_dataframe()\n    io.close()\n    return spikes, trials\n"})}),"\n",(0,t.jsx)(i.h2,{id:"6-notes",children:"6. Notes"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"eval_mask is important for benchmark scoring."}),"\n",(0,t.jsx)(i.li,{children:"Dataset size ~297.3 MiB (11 files, created October 29, 2024)."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);