"use strict";(self.webpackChunkhcihub_docs=self.webpackChunkhcihub_docs||[]).push([[7500],{11:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"datasets/invasive/Finger RL","title":"3_Finger RL","description":"Dataset Overview","source":"@site/docs/datasets/invasive/3_Finger RL.md","sourceDirName":"datasets/invasive","slug":"/datasets/invasive/Finger RL","permalink":"/BCIJelly-site/docs/next/datasets/invasive/Finger RL","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasets/invasive/3_Finger RL.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2_FALCON M2","permalink":"/BCIJelly-site/docs/next/datasets/invasive/FALCON M2"},"next":{"title":"4_Finger PPC","permalink":"/BCIJelly-site/docs/next/datasets/invasive/Finger PPC"}}');var t=i(4848),r=i(8453);const l={},a="3_Finger RL",d={},c=[{value:"Dataset Overview",id:"dataset-overview",level:2},{value:"File Structure",id:"file-structure",level:2},{value:"Processing Steps",id:"processing-steps",level:2},{value:"Spike Binning Method",id:"spike-binning-method",level:2},{value:"Example Usage",id:"example-usage",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"3_finger-rl",children:"3_Finger RL"})}),"\n",(0,t.jsx)(n.h2,{id:"dataset-overview",children:"Dataset Overview"}),"\n",(0,t.jsx)(n.p,{children:"The Finger_RL dataset contains single-neuron recordings from two tetraplegic human participants attempting individual finger movements."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Brain areas:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Left posterior parietal cortex (PPC, PC-IP junction)"}),"\n",(0,t.jsx)(n.li,{children:"Left motor cortex hand knob (MC)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Data format: NWB (Neurodata Without Borders)"}),"\n",(0,t.jsx)(n.li,{children:"Sampling rate: 30 kHz"}),"\n",(0,t.jsx)(n.li,{children:"Number of subjects: 2"}),"\n",(0,t.jsx)(n.li,{children:"Task: Attempted individual finger movements (both hands)"}),"\n",(0,t.jsx)(n.li,{children:"Data type: Single-neuron spike data, trial information, finger labels"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"file-structure",children:"File Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Raw data: ",(0,t.jsx)(n.code,{children:"../data/sub-P1/*.nwb"})]}),"\n",(0,t.jsxs)(n.li,{children:["Processed output: ",(0,t.jsx)(n.code,{children:"../out/sub-P1/YYYYMMDD.npz"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"features"}),": [Trials, Time, Channels], with time dimension binned to 50"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"labels"}),": finger class for each trial"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"processing-steps",children:"Processing Steps"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Loop through all ",(0,t.jsx)(n.code,{children:".nwb"})," files."]}),"\n",(0,t.jsxs)(n.li,{children:["Extract key data from NWB files:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"units['spike_times']"}),": spike times per channel"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"intervals['trials']['start_time']"})," & ",(0,t.jsx)(n.code,{children:"stop_time"}),": trial start and stop times"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"trials['finger']"}),": finger label for each trial"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Convert spike times to sample indices (multiply by FS)."}),"\n",(0,t.jsxs)(n.li,{children:["For each trial:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Extract trial spike data based on start/stop indices"}),"\n",(0,t.jsxs)(n.li,{children:["Build a ",(0,t.jsx)(n.code,{children:"[time_steps, channels]"})," matrix counting spikes per time step"]}),"\n",(0,t.jsx)(n.li,{children:"Perform time binning (default 50 bins)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Stack all trials into ",(0,t.jsx)(n.code,{children:"[Trials, Time, Channels]"})]}),"\n",(0,t.jsxs)(n.li,{children:["Save as ",(0,t.jsx)(n.code,{children:".npz"})," containing ",(0,t.jsx)(n.code,{children:"features"})," and ",(0,t.jsx)(n.code,{children:"labels"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"spike-binning-method",children:"Spike Binning Method"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Function: ",(0,t.jsx)(n.code,{children:"bin_spikes_for_classify(spikes, expect_num_bins=50)"})]}),"\n",(0,t.jsxs)(n.li,{children:["Input: ",(0,t.jsx)(n.code,{children:"[time_steps, channels]"})," spike matrix per trial"]}),"\n",(0,t.jsxs)(n.li,{children:["Output: ",(0,t.jsx)(n.code,{children:"[expect_num_bins, channels]"})," binned spike counts"]}),"\n",(0,t.jsx)(n.li,{children:"If trial length < total bin steps, pad zeros at the end"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"data = np.load('../out/sub-P1/20230409.npz')\nX = data['features']  # shape [Trials, 50, Channels]\nY = data['labels']    # shape [Trials]\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);