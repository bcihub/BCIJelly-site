"use strict";(self.webpackChunkhcihub_docs=self.webpackChunkhcihub_docs||[]).push([[1058],{8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var s=n(6540);const t={},r=s.createContext(t);function a(e){const i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:i},e.children)}},9659:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"datasets/invasive/Visual Neuropixel","title":"9_Visual Neuropixel","description":"Data Source: Allen Brain Observatory \u2014 Visual Coding Neuropixels dataset (NWB, downloaded via AllenSDK). This dataset contains 58 experiments, each with up to 6 Neuropixels probes covering cortical, thalamic, and hippocampal regions, and is designed for systematic study of the mouse visual system under passive stimulation. This workflow uses drifting gratings (8 orientations) as an example, showing the complete process of session selection, unit filtering, spike matrix construction, time binning, and data saving. The official documentation describes the 8 orientations and temporal/spatial frequency settings in detail.","source":"@site/docs/datasets/invasive/9_Visual Neuropixel.md","sourceDirName":"datasets/invasive","slug":"/datasets/invasive/Visual Neuropixel","permalink":"/BCIJelly-site/docs/next/datasets/invasive/Visual Neuropixel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasets/invasive/9_Visual Neuropixel.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"8_Reaching MC PMC","permalink":"/BCIJelly-site/docs/next/datasets/invasive/Reaching MC PMC"},"next":{"title":"10_Visual Grating Task","permalink":"/BCIJelly-site/docs/next/datasets/invasive/Visual Grating Task"}}');var t=n(4848),r=n(8453);const a={},l="9_Visual Neuropixel",c={},o=[{value:"1. Environment Requirements",id:"1-environment-requirements",level:2},{value:"2. Directory Structure &amp; Caching",id:"2-directory-structure--caching",level:2},{value:"3. Objective and Output Format",id:"3-objective-and-output-format",level:2},{value:"4. Key Parameters",id:"4-key-parameters",level:2},{value:"5.  Processing Pipeline (Step-by-Step)",id:"5--processing-pipeline-step-by-step",level:2},{value:"Step 0: Initialize Project Cache and Session Table",id:"step-0-initialize-project-cache-and-session-table",level:3},{value:"Step 1: Select Sessions Containing  <code>drifting_gratings</code>",id:"step-1-select-sessions-containing--drifting_gratings",level:3},{value:"Step 2: Filter Units by Brain Region and Quality Metrics",id:"step-2-filter-units-by-brain-region-and-quality-metrics",level:3},{value:"Step 3: Construct Raw Binary Spike Matrices for Each Trial",id:"step-3-construct-raw-binary-spike-matrices-for-each-trial",level:3},{value:"Step 4: Perform Time Binning to Standardize Trial Length",id:"step-4-perform-time-binning-to-standardize-trial-length",level:3},{value:"Step 5: Package &amp; Save",id:"step-5-package--save",level:3},{value:"6. How to Run",id:"6-how-to-run",level:2},{value:"7. Output Data Format",id:"7-output-data-format",level:2},{value:"8. Common Issues and Recommendations",id:"8-common-issues-and-recommendations",level:2}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"9_visual-neuropixel",children:"9_Visual Neuropixel"})}),"\n",(0,t.jsx)(i.h1,{id:"neuropixels-data-processing-workflow",children:"Neuropixels Data Processing Workflow"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Data Source:"})," Allen Brain Observatory \u2014 Visual Coding Neuropixels dataset (NWB, downloaded via AllenSDK). This dataset contains 58 experiments, each with up to 6 Neuropixels probes covering cortical, thalamic, and hippocampal regions, and is designed for systematic study of the mouse visual system under passive stimulation. This workflow uses ",(0,t.jsx)(i.em,{children:"drifting gratings"})," (8 orientations) as an example, showing the complete process of session selection, unit filtering, spike matrix construction, time binning, and data saving. The official documentation describes the 8 orientations and temporal/spatial frequency settings in detail."]}),"\n",(0,t.jsxs)(i.p,{children:["Original dataset link: ",(0,t.jsx)(i.a,{href:"https://portal.brain-map.org/circuits-behavior/visual-coding-neuropixels",children:"https://portal.brain-map.org/circuits-behavior/visual-coding-neuropixels"})]}),"\n",(0,t.jsx)(i.h2,{id:"1-environment-requirements",children:"1. Environment Requirements"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Python \u2265 3.8"}),"\n",(0,t.jsx)(i.li,{children:"AllenSDK"}),"\n",(0,t.jsx)(i.li,{children:"NumPy\u3001tqdm\u3001 pickle"}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"pip install allensdk numpy tqdm\n"})}),"\n",(0,t.jsx)(i.h2,{id:"2-directory-structure--caching",children:"2. Directory Structure & Caching"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["By default, this workflow uses a local cache directory ",(0,t.jsx)(i.code,{children:"./allen_vc_npx"}),", where AllenSDK creates and maintains ",(0,t.jsx)(i.code,{children:"manifest.json"})," and downloaded session/unit data."]}),"\n",(0,t.jsxs)(i.li,{children:["You can set a custom ",(0,t.jsx)(i.code,{children:"cache_dir"})," in the parameters section."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"3-objective-and-output-format",children:"3. Objective and Output Format"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Objective:"})," From the Visual Coding \u2013 Neuropixels project, select sessions containing the ",(0,t.jsx)(i.code,{children:"drifting_gratings"})," stimulus, filter units (neurons) within a specified brain region (e.g., ",(0,t.jsx)(i.code,{children:"VISp"}),") that meet the SNR threshold, build raw 0/1 spike-time matrices for each trial, and perform time binning (standardizing to a fixed number of time steps). Finally, save the processed data as ",(0,t.jsx)(i.code,{children:".npy"}),":"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"spike"}),": integer spike count matrix with shape ",(0,t.jsx)(i.code,{children:"(num_trials, time_bins, num_units)"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"label"}),": integer vector ",(0,t.jsx)(i.code,{children:"(num_trials,)"}),", containing the class labels for the 8 orientations (0\u2013315\xb0, in 45\xb0 steps)"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"4-key-parameters",children:"4. Key Parameters"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:'cache_dir = "./allen_vc_npx"'})," :  AllenSDK cache directory"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"sampling_rate = 30000"})," \uff1a Neuropixels native sampling rate (Hz)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"snr_thresh = 2.0"})," \uff1a Minimum signal-to-noise ratio for unit selection"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:'target_area = "VISp"'})," \uff1a Target brain region (e.g., ",(0,t.jsx)(i.code,{children:"VISp"}),")"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"expect_num_bins = 50"})," \uff1aNumber of time bins per trial (for classification tasks)"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"5--processing-pipeline-step-by-step",children:"5.  Processing Pipeline (Step-by-Step)"}),"\n",(0,t.jsx)(i.h3,{id:"step-0-initialize-project-cache-and-session-table",children:"Step 0: Initialize Project Cache and Session Table"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Create/verify the cache directory and ",(0,t.jsx)(i.code,{children:"manifest.json"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Load the project cache using ",(0,t.jsx)(i.code,{children:"EcephysProjectCache.from_warehouse(manifest=...)"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Read the session table with ",(0,t.jsx)(i.code,{children:"cache.get_session_table()"})," and iterate over session IDs."]}),"\n"]}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:["AllenSDK\u2019s ",(0,t.jsx)(i.code,{children:"EcephysProjectCache"})," automatically manages downloads and local storage and is the recommended entry point for this dataset."]}),"\n"]}),"\n",(0,t.jsxs)(i.h3,{id:"step-1-select-sessions-containing--drifting_gratings",children:["Step 1: Select Sessions Containing  ",(0,t.jsx)(i.code,{children:"drifting_gratings"})]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Copy ",(0,t.jsx)(i.code,{children:"session.stimulus_presentations"})," and clean the ",(0,t.jsx)(i.code,{children:"orientation"})," field (set ",(0,t.jsx)(i.code,{children:'"null"'})," to NaN)."]}),"\n",(0,t.jsxs)(i.li,{children:["Keep only rows where ",(0,t.jsx)(i.code,{children:'stimulus_name == "drifting_gratings"'}),", removing empty orientations."]}),"\n",(0,t.jsxs)(i.li,{children:["Keep the 8 valid orientations ",(0,t.jsx)(i.code,{children:"{0, 45, 90, 135, 180, 225, 270, 315}"}),", mapping each to class labels ",(0,t.jsx)(i.code,{children:"0..7"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:["According to official documentation, ",(0,t.jsx)(i.em,{children:"drifting gratings"})," use 8 orientations spaced 45\xb0 apart. Entries with ",(0,t.jsx)(i.code,{children:"null"})," orientation represent blank screens and should be removed."]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"step-2-filter-units-by-brain-region-and-quality-metrics",children:"Step 2: Filter Units by Brain Region and Quality Metrics"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Select units from ",(0,t.jsx)(i.code,{children:"session.units"})," where ",(0,t.jsx)(i.code,{children:"structure_acronym == target_area"})," and ",(0,t.jsx)(i.code,{children:"snr >= snr_thresh"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"step-3-construct-raw-binary-spike-matrices-for-each-trial",children:"Step 3: Construct Raw Binary Spike Matrices for Each Trial"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["For each ",(0,t.jsx)(i.code,{children:"drifting_gratings"})," trial:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Compute trial duration from ",(0,t.jsx)(i.code,{children:"start_time"})," to ",(0,t.jsx)(i.code,{children:"stop_time"})," and convert to sample count (rounding up at 30 kHz)."]}),"\n",(0,t.jsxs)(i.li,{children:["Initialize a ",(0,t.jsx)(i.code,{children:"(num_units_selected, num_samples)"})," 0/1 matrix."]}),"\n",(0,t.jsxs)(i.li,{children:["For each unit, get ",(0,t.jsx)(i.code,{children:"spike_times[unit_id]"})," within ",(0,t.jsx)(i.code,{children:"[start_time, stop_time)"}),", convert to relative sample indices, and set those positions to 1."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"step-4-perform-time-binning-to-standardize-trial-length",children:"Step 4: Perform Time Binning to Standardize Trial Length"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The function ",(0,t.jsx)(i.code,{children:"bin_spikes_for_classify(data, expect_num_bins=50)"}),":","\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Accepts a matrix shaped ",(0,t.jsx)(i.code,{children:"[channels, time_steps]"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Computes ",(0,t.jsx)(i.code,{children:"bin_size = ceil(time_steps / expect_num_bins)"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Pads with zeros if necessary to match ",(0,t.jsx)(i.code,{children:"bin_size * expect_num_bins"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Reshapes to ",(0,t.jsx)(i.code,{children:"[channels, expect_num_bins, bin_size]"})," and sums over the last axis."]}),"\n",(0,t.jsxs)(i.li,{children:["Returns ",(0,t.jsx)(i.code,{children:"[expect_num_bins, channels]"})," ."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["In the main loop, call this function for each trial and store results in ",(0,t.jsx)(i.code,{children:"X_list"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"step-5-package--save",children:"Step 5: Package & Save"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Stack all binned trials into ",(0,t.jsx)(i.code,{children:"X_array"})," of shape ",(0,t.jsx)(i.code,{children:"(num_trials, time_bins, num_units)"})," and convert label list to ",(0,t.jsx)(i.code,{children:"y_array"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Save as ",(0,t.jsx)(i.code,{children:".npy"}),":"]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'data_dict = {"spike": X_array, "label": y_array}\nnp.save("./allen_vc_npx/session_{ID}_dg8_{AREA}.npy", data_dict)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"6-how-to-run",children:"6. How to Run"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:["Place ",(0,t.jsx)(i.code,{children:"check_data.py"})," in any directory."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Modify the parameter section (cache dir, brain area, SNR threshold, bin count, etc.)."}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Run:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"python data_process.py\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:["The script will iterate through sessions, process only those with ",(0,t.jsx)(i.code,{children:"drifting_gratings"}),", and save ",(0,t.jsx)(i.code,{children:".npy"})," files in the cache directory."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"7-output-data-format",children:"7. Output Data Format"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"session_{session_id}_dg8_{target_area}.npy"}),":","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"spike"}),": integer (",(0,t.jsx)(i.code,{children:"np.int8"})," or ",(0,t.jsx)(i.code,{children:"np.int32"}),"), shape ",(0,t.jsx)(i.code,{children:"(N, T, C)"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"label"}),": integer, values ",(0,t.jsx)(i.code,{children:"0\u20137"})," for 8 orientations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"8-common-issues-and-recommendations",children:"8. Common Issues and Recommendations"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsxs)(i.strong,{children:["Missing ",(0,t.jsx)(i.code,{children:"drifting_gratings"})]}),": Not all sessions contain this stimulus; script skips missing ones. Consider supporting ",(0,t.jsx)(i.code,{children:"static_gratings"})," or natural movie stimuli."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Time steps & bin size"}),": Larger ",(0,t.jsx)(i.code,{children:"expect_num_bins"})," means higher temporal resolution but larger input tensors; adjust for model and memory constraints."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Unit quality control"}),": Current filter is SNR \u2265 2; you can add criteria such as ",(0,t.jsx)(i.code,{children:"firing_rate"})," and ",(0,t.jsx)(i.code,{children:"ISI violations"})," from AllenSDK."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);