"use strict";(self.webpackChunkhcihub_docs=self.webpackChunkhcihub_docs||[]).push([[4406],{4341:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"datasets/invasive/FALCON M2","title":"2_FALCON M2","description":"Dataset","source":"@site/docs/datasets/invasive/2_FALCON M2.md","sourceDirName":"datasets/invasive","slug":"/datasets/invasive/FALCON M2","permalink":"/BCIJelly-site/docs/next/datasets/invasive/FALCON M2","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasets/invasive/2_FALCON M2.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"1_FALCON M1-A Dataset","permalink":"/BCIJelly-site/docs/next/datasets/invasive/FALCON M1-A"},"next":{"title":"3_Finger RL","permalink":"/BCIJelly-site/docs/next/datasets/invasive/Finger RL"}}');var r=s(4848),l=s(8453);const d={},a="2_FALCON M2",t={},o=[{value:"Dataset",id:"dataset",level:2},{value:"1. Project Overview",id:"1-project-overview",level:2},{value:"2. Key Features",id:"2-key-features",level:2},{value:"3. Core Functions",id:"3-core-functions",level:2},{value:"<code>bin_spikes_for_regression(spikes, bin_size)</code>",id:"bin_spikes_for_regressionspikes-bin_size",level:3},{value:"<code>create_windowed_dataset_for_regression(data, label, window_size, stride)</code>",id:"create_windowed_dataset_for_regressiondata-label-window_size-stride",level:3},{value:"<code>falconm2(data_root, save_root, window_size, stride)</code>",id:"falconm2data_root-save_root-window_size-stride",level:3},{value:"4. Usage",id:"4-usage",level:2},{value:"1. Prepare Data",id:"1-prepare-data",level:3},{value:"2. Run the Preprocessing Script",id:"2-run-the-preprocessing-script",level:3},{value:"3. View Results",id:"3-view-results",level:3},{value:"4. Load Processed Data",id:"4-load-processed-data",level:3},{value:"5. Output Data Shape",id:"5-output-data-shape",level:2},{value:"<code>spikes_*.npy</code>",id:"spikes_npy",level:3},{value:"<code>reg_labels_*.npy</code>",id:"reg_labels_npy",level:3},{value:"6. Notes",id:"6-notes",level:2},{value:"7. Troubleshooting",id:"7-troubleshooting",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"2_falcon-m2",children:"2_FALCON M2"})}),"\n",(0,r.jsx)(n.h1,{id:"preprocessing-pipeline-documentation",children:"Preprocessing Pipeline Documentation"}),"\n",(0,r.jsx)(n.h2,{id:"dataset",children:"Dataset"}),"\n",(0,r.jsxs)(n.p,{children:["Access the dataset here:\n\ud83d\udd17 ",(0,r.jsx)(n.a,{href:"https://dandiarchive.org/dandiset/000953?search=000953&pos=1",children:"DANDI Archive - Dataset 000953"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-project-overview",children:"1. Project Overview"}),"\n",(0,r.jsxs)(n.p,{children:["This project provides a complete preprocessing pipeline for the ",(0,r.jsx)(n.strong,{children:"FALCON Benchmark M2"})," dataset, which contains neural recordings from the primary motor cortex in non-human primates during finger movement tasks."]}),"\n",(0,r.jsxs)(n.p,{children:["The goal is to transform raw ",(0,r.jsx)(n.code,{children:".nwb"})," spike train data into synchronized, windowed samples of neural activity and behavioral labels (e.g. hand position or velocity) suitable for training machine learning models."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-key-features",children:"2. Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Load spike times and continuous behavioral data (e.g. hand position, velocity) from ",(0,r.jsx)(n.code,{children:".nwb"})," files"]}),"\n",(0,r.jsx)(n.li,{children:"Convert trial-wise spike times into binary spike matrices"}),"\n",(0,r.jsx)(n.li,{children:"Perform time binning to downsample spikes to match behavioral sampling rate"}),"\n",(0,r.jsx)(n.li,{children:"Apply sliding windows to generate fixed-length training samples"}),"\n",(0,r.jsxs)(n.li,{children:["Save processed data as ",(0,r.jsx)(n.code,{children:".npy"})," arrays"]}),"\n",(0,r.jsx)(n.li,{children:"Optionally plot raster plots of example trials for quality inspection"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-core-functions",children:"3. Core Functions"}),"\n",(0,r.jsx)(n.h3,{id:"bin_spikes_for_regressionspikes-bin_size",children:(0,r.jsx)(n.code,{children:"bin_spikes_for_regression(spikes, bin_size)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Downsample binary spike matrix by aggregating spike counts in fixed time bins."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inputs"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spikes"}),": ",(0,r.jsx)(n.code,{children:"numpy.ndarray"}),", shape ",(0,r.jsx)(n.code,{children:"[time_steps, channels]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bin_size"}),": ",(0,r.jsx)(n.code,{children:"int"}),", bin size in timesteps (e.g. 20 ms)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Output"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"binned_spikes"}),": ",(0,r.jsx)(n.code,{children:"numpy.ndarray"}),", shape ",(0,r.jsx)(n.code,{children:"[num_bins, channels]"}),", spike counts per bin"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"create_windowed_dataset_for_regressiondata-label-window_size-stride",children:(0,r.jsx)(n.code,{children:"create_windowed_dataset_for_regression(data, label, window_size, stride)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Slice time-aligned spike and behavior sequences into fixed-length sliding windows."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inputs"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"}),": shape ",(0,r.jsx)(n.code,{children:"[num_trials, time, channels]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"label"}),": shape ",(0,r.jsx)(n.code,{children:"[num_trials, time, behavior_dim]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"window_size"}),": number of time steps per window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"stride"}),": step size between windows"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Outputs"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"all_features_np"}),": ",(0,r.jsx)(n.code,{children:"[num_samples, window_size, channels]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"all_labels_np"}),": ",(0,r.jsx)(n.code,{children:"[num_samples, window_size, behavior_dim]"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"falconm2data_root-save_root-window_size-stride",children:(0,r.jsx)(n.code,{children:"falconm2(data_root, save_root, window_size, stride)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Iterate over ",(0,r.jsx)(n.code,{children:".nwb"})," files"]}),"\n",(0,r.jsx)(n.li,{children:"Extract spike and behavioral data"}),"\n",(0,r.jsx)(n.li,{children:"Bin spike data into 20 ms windows"}),"\n",(0,r.jsx)(n.li,{children:"Apply sliding window slicing"}),"\n",(0,r.jsx)(n.li,{children:"Save processed data"}),"\n",(0,r.jsx)(n.li,{children:"Plot raster images for a few trials"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_root"}),": directory containing raw ",(0,r.jsx)(n.code,{children:".nwb"})," files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"save_root"}),": directory for saving output"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"window_size"}),": length of each training sample"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"stride"}),": step between samples"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-usage",children:"4. Usage"}),"\n",(0,r.jsx)(n.h3,{id:"1-prepare-data",children:"1. Prepare Data"}),"\n",(0,r.jsxs)(n.p,{children:["Place all ",(0,r.jsx)(n.code,{children:".nwb"})," files from the ",(0,r.jsx)(n.code,{children:"MonkeyN-held-in-calib"})," session inside the ",(0,r.jsx)(n.code,{children:"data_root"})," directory."]}),"\n",(0,r.jsx)(n.h3,{id:"2-run-the-preprocessing-script",children:"2. Run the Preprocessing Script"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"python falconm2(\n    data_root=r'../data/sub-MonkeyN-held-in-calib',\n    save_root=r'../out/sub-MonkeyN-held-in-calib',\n    window_size=20,\n    stride=10\n)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-view-results",children:"3. View Results"}),"\n",(0,r.jsx)(n.p,{children:"Example output structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"../out/sub-MonkeyN-held-in-calib/\n\u251c\u2500\u2500 20201019Run1/\n\u2502   \u251c\u2500\u2500 spikes_20201019Run1.npy           # spike features\n\u2502   \u251c\u2500\u2500 reg_labels_20201019Run1.npy       # behavioral labels\n\u2502   \u251c\u2500\u2500 trial_0_raster.png                # example trial raster\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-load-processed-data",children:"4. Load Processed Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import numpy as np\n\nfeatures = np.load('../out/sub-MonkeyN-held-in-calib/20201019Run1/spikes_20201019Run1.npy')\nlabels = np.load('../out/sub-MonkeyN-held-in-calib/20201019Run1/reg_labels_20201019Run1.npy')\n\nprint(features.shape, labels.shape)\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-output-data-shape",children:"5. Output Data Shape"}),"\n",(0,r.jsx)(n.p,{children:"After preprocessing and windowing, two arrays are generated:"}),"\n",(0,r.jsx)(n.h3,{id:"spikes_npy",children:(0,r.jsx)(n.code,{children:"spikes_*.npy"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"numpy.ndarray"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Shape"}),": ",(0,r.jsx)(n.code,{children:"[num_samples, window_size, num_channels]"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"num_samples"}),": number of sliding windows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"window_size"}),": time steps per sample (e.g., 20 = 400ms)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"num_channels"}),": number of spike channels (e.g., 64, 96)"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Each sample is a spike activity matrix input for a model."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"reg_labels_npy",children:(0,r.jsx)(n.code,{children:"reg_labels_*.npy"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"numpy.ndarray"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Shape"}),": ",(0,r.jsx)(n.code,{children:"[num_samples, window_size, label_dim]"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"label_dim"}),": 2 (e.g., hand (x, y)) or 4 (position + velocity)"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Each label corresponds to the spike sample, used for regression."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-notes",children:"6. Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default spike bin size is ",(0,r.jsx)(n.strong,{children:"20ms"}),"; you may change ",(0,r.jsx)(n.code,{children:"bin_size"})," in ",(0,r.jsx)(n.code,{children:"bin_spikes_for_regression()"})]}),"\n",(0,r.jsxs)(n.li,{children:["Choose ",(0,r.jsx)(n.code,{children:"window_size"})," and ",(0,r.jsx)(n.code,{children:"stride"})," based on modeling requirements and dataset length"]}),"\n",(0,r.jsx)(n.li,{children:"Behavioral data sampling rate is 50 Hz; spike times are aligned accordingly"}),"\n",(0,r.jsx)(n.li,{children:"Trials shorter than the window size will be skipped"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-troubleshooting",children:"7. Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Can't read ",(0,r.jsx)(n.code,{children:".nwb"})," files"]}),": Ensure files are complete and follow NWB v2.0+ spec"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shape mismatch"}),": Verify behavioral data aligns with binned spike data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Need customization?"}),": Reach out to the maintainer for help with modifications or enhancements"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var i=s(6540);const r={},l=i.createContext(r);function d(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);